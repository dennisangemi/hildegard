#!/bin/bash

# ------------------------------------------------------------------------------------------------------------------------ #
# Function: add_element_to_mkdocs_nav
# Description: This function adds a new entry to the 'nav' section of a MkDocs YAML configuration file.
#              It specifically targets the 'Archivio' section within 'nav' and adds the new entry under the specified year.
#              If the year does not exist, it creates a new entry for that year.
# Parameters:
#   - mkdocs_file: The path to the MkDocs YAML configuration file.
#   - year: The year under which the new entry should be added.
#   - new_entry: The new entry to be added under the specified year.
# Usage:
#   add_element_to_mkdocs_nav <mkdocs_file> <anno> <elemento>
# Example:
#   add_element_to_mkdocs_nav mkdocs.yml 2023 "New Entry"
# Notes:
#   - The function creates a backup of the original MkDocs file before making any changes.
#   - It uses the 'yq' tool to parse and modify the YAML content.
#   - Only the 'nav' section of the MkDocs file is modified.
#   - Temporary files are created and cleaned up during the process.
# ------------------------------------------------------------------------------------------------------------------------ #

#!/bin/bash

add_element_to_mkdocs_nav() {
    if [ $# -lt 3 ]; then
        echo "Errore: argomenti mancanti"
        echo "Utilizzo: add_element_to_mkdocs_nav <mkdocs_file> <anno> <elemento>"
        return 1
    fi

    local mkdocs_file="$1"
    local year="$2"
    local new_entry="$3"
    local temp_file
    temp_file=$(mktemp) || return 1
    local backup_file="${mkdocs_file}.backup_$(date +%s)"
    local nav_indent

    # Crea backup
    cp "$mkdocs_file" "$backup_file" || return 1

    # Rileva indentazione originale
    nav_indent=$(grep -m1 '^nav:' "$mkdocs_file" | sed -E 's/nav:.*//')
    [ -z "$nav_indent" ] && nav_indent="  "

    # Modifica solo se l'elemento non esiste
    yq -y --arg year "$year" --arg new_entry "$new_entry" '
    .nav |= map(
        if has("Archivio") then
            .Archivio |= (
                if any(.[]; has($year)) then
                    map(
                        if has($year) then
                            .[$year] |= (
                                if any(. == $new_entry) then .
                                else . + [$new_entry]
                                end
                            )
                        else .
                        end
                    )
                else
                    . + [{ ($year): [$new_entry] }]
                end
            )
        else .
        end
    )' "$mkdocs_file" | 
    yq -y '.nav' |
    sed "s/^/${nav_indent}/" > "$temp_file"

    # Sostituzione sezione nav
    awk -v new_nav="$(cat "$temp_file")" '
    BEGIN { in_nav = 0; replaced = 0 }
    /^nav:/ {
        print $0
        in_nav = 1
        replaced = 1
        print new_nav
        next
    }
    in_nav && /^[^[:space:]]/ {
        in_nav = 0
    }
    in_nav {
        next
    }
    { print }
    ' "$mkdocs_file" > "${mkdocs_file}.tmp" && mv "${mkdocs_file}.tmp" "$mkdocs_file"

    rm -f "$temp_file" "$backup_file"
}
